{
  "id": "2ce6e25dad8f87188e5b38d0830fef01",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.0",
  "solcLongVersion": "0.7.0+commit.9e61f92b",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Child.sol": {
        "content": "pragma solidity >=0.7.0;\n\ncontract Child {\n    uint256 public data;\n\n    // use this function instead of the constructor\n    // since creation will be done using createClone() function\n    function init(uint256 _data) external {\n        data = _data;\n    }\n}\n"
      },
      "contracts/Factory.sol": {
        "content": "pragma solidity >=0.7.0;\n\nimport \"./Child.sol\";\nimport \"./CloneFactory.sol\";\n\ncontract Factory is CloneFactory {\n    Child[] public children;\n    address masterContract;\n\n    constructor(address _masterContract) {\n        masterContract = _masterContract;\n    }\n\n    function createChild(uint256 data) external {\n        Child child = Child(createClone(masterContract));\n        child.init(data);\n        children.push(child);\n    }\n\n    function getChildren() external view returns (Child[] memory) {\n        return children;\n    }\n}\n"
      },
      "contracts/CloneFactory.sol": {
        "content": "pragma solidity >=0.5.0;\n\n/*\nThe MIT License (MIT)\nCopyright (c) 2018 Murray Software, LLC.\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n//solhint-disable max-line-length\n//solhint-disable no-inline-assembly\n\ncontract CloneFactory {\n    function createClone(address target) internal returns (address result) {\n        bytes20 targetBytes = bytes20(target);\n        assembly {\n            let clone := mload(0x40)\n            mstore(\n                clone,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(clone, 0x14), targetBytes)\n            mstore(\n                add(clone, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            result := create(0, clone, 0x37)\n        }\n    }\n\n    function isClone(address target, address query)\n        internal\n        view\n        returns (bool result)\n    {\n        bytes20 targetBytes = bytes20(target);\n        assembly {\n            let clone := mload(0x40)\n            mstore(\n                clone,\n                0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000\n            )\n            mstore(add(clone, 0xa), targetBytes)\n            mstore(\n                add(clone, 0x1e),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n\n            let other := add(clone, 0x40)\n            extcodecopy(query, other, 0, 0x2d)\n            result := and(\n                eq(mload(clone), mload(other)),\n                eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\n            )\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Child.sol": {
        "Child": {
          "abi": [
            {
              "inputs": [],
              "name": "data",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_data",
                  "type": "uint256"
                }
              ],
              "name": "init",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060ac8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806373d4a13a146037578063b7b0422d14604f575b600080fd5b603d606b565b60408051918252519081900360200190f35b606960048036036020811015606357600080fd5b50356071565b005b60005481565b60005556fea264697066735822122033f934c6ec89c88a5bc3d676588493c1fe4ddc8c9a076362a1fcd6c5f5d33b1964736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xAC DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73D4A13A EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xB7B0422D EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x71 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xF9 CALLVALUE 0xC6 0xEC DUP10 0xC8 DUP11 JUMPDEST 0xC3 0xD6 PUSH23 0x588493C1FE4DDC8C9A076362A1FCD6C5F5D33B1964736F PUSH13 0x63430007000033000000000000 ",
              "sourceMap": "26:232:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806373d4a13a146037578063b7b0422d14604f575b600080fd5b603d606b565b60408051918252519081900360200190f35b606960048036036020811015606357600080fd5b50356071565b005b60005481565b60005556fea264697066735822122033f934c6ec89c88a5bc3d676588493c1fe4ddc8c9a076362a1fcd6c5f5d33b1964736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73D4A13A EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xB7B0422D EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x71 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xF9 CALLVALUE 0xC6 0xEC DUP10 0xC8 DUP11 JUMPDEST 0xC3 0xD6 PUSH23 0x588493C1FE4DDC8C9A076362A1FCD6C5F5D33B1964736F PUSH13 0x63430007000033000000000000 ",
              "sourceMap": "26:232:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47:19;;;:::i;:::-;;;;;;;;;;;;;;;;189:67;;;;;;;;;;;;;;;;-1:-1:-1;189:67:0;;:::i;:::-;;47:19;;;;:::o;189:67::-;237:4;:12;189:67::o"
            },
            "methodIdentifiers": {
              "data()": "73d4a13a",
              "init(uint256)": "b7b0422d"
            }
          }
        }
      },
      "contracts/CloneFactory.sol": {
        "CloneFactory": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220060c64fa111b938501ed01ade642b0f31580c11642eed1d88095cbce26ea02f464736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC PUSH5 0xFA111B9385 ADD 0xED ADD 0xAD 0xE6 TIMESTAMP 0xB0 RETURN ISZERO DUP1 0xC1 AND TIMESTAMP 0xEE 0xD1 0xD8 DUP1 SWAP6 0xCB 0xCE 0x26 0xEA MUL DELEGATECALL PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "1188:1431:1:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea2646970667358221220060c64fa111b938501ed01ade642b0f31580c11642eed1d88095cbce26ea02f464736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC PUSH5 0xFA111B9385 ADD 0xED ADD 0xAD 0xE6 TIMESTAMP 0xB0 RETURN ISZERO DUP1 0xC1 AND TIMESTAMP 0xEE 0xD1 0xD8 DUP1 SWAP6 0xCB 0xCE 0x26 0xEA MUL DELEGATECALL PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "1188:1431:1:-:0;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/Factory.sol": {
        "Factory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_masterContract",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "children",
              "outputs": [
                {
                  "internalType": "contract Child",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "data",
                  "type": "uint256"
                }
              ],
              "name": "createChild",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getChildren",
              "outputs": [
                {
                  "internalType": "contract Child[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040516103333803806103338339818101604052602081101561003357600080fd5b5051600180546001600160a01b0319166001600160a01b039092169190911790556102d0806100636000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630419eca5146100465780634892e8e8146100655780637002ce42146100bd575b600080fd5b6100636004803603602081101561005c57600080fd5b50356100f6565b005b61006d6101bf565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100a9578181015183820152602001610091565b505050509050019250505060405180910390f35b6100da600480360360208110156100d357600080fd5b5035610221565b604080516001600160a01b039092168252519081900360200190f35b60015460009061010e906001600160a01b0316610248565b9050806001600160a01b031663b7b0422d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b5050600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b039490941693909317909255505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561021757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f9575b5050505050905090565b6000818154811061022e57fe5b6000918252602090912001546001600160a01b0316905081565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f094935050505056fea2646970667358221220860cbd414596bf788d0964463e87bf00bb06274386b07f50801d553cbd2850b964736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x333 CODESIZE SUB DUP1 PUSH2 0x333 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2D0 DUP1 PUSH2 0x63 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x419ECA5 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4892E8E8 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x7002CE42 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x10E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x248 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB7B0422D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xC 0xBD COINBASE GASLIMIT SWAP7 0xBF PUSH25 0x8D0964463E87BF00BB06274386B07F50801D553CBD2850B964 PUSH20 0x6F6C634300070000330000000000000000000000 ",
              "sourceMap": "78:456:2:-:0;;;175:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;175:86:2;222:14;:32;;-1:-1:-1;;;;;;222:32:2;-1:-1:-1;;;;;222:32:2;;;;;;;;;78:456;;;-1:-1:-1;78:456:2;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630419eca5146100465780634892e8e8146100655780637002ce42146100bd575b600080fd5b6100636004803603602081101561005c57600080fd5b50356100f6565b005b61006d6101bf565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100a9578181015183820152602001610091565b505050509050019250505060405180910390f35b6100da600480360360208110156100d357600080fd5b5035610221565b604080516001600160a01b039092168252519081900360200190f35b60015460009061010e906001600160a01b0316610248565b9050806001600160a01b031663b7b0422d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561015657600080fd5b505af115801561016a573d6000803e3d6000fd5b5050600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b039490941693909317909255505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561021757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f9575b5050505050905090565b6000818154811061022e57fe5b6000918252602090912001546001600160a01b0316905081565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f094935050505056fea2646970667358221220860cbd414596bf788d0964463e87bf00bb06274386b07f50801d553cbd2850b964736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x419ECA5 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4892E8E8 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x7002CE42 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x10E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x248 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB7B0422D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xC 0xBD COINBASE GASLIMIT SWAP7 0xBF PUSH25 0x8D0964463E87BF00BB06274386B07F50801D553CBD2850B964 PUSH20 0x6F6C634300070000330000000000000000000000 ",
              "sourceMap": "78:456:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;267:165;;;;;;;;;;;;;;;;-1:-1:-1;267:165:2;;:::i;:::-;;438:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:23;;;;;;;;;;;;;;;;-1:-1:-1;117:23:2;;:::i;:::-;;;;-1:-1:-1;;;;;117:23:2;;;;;;;;;;;;;;267:165;353:14;;321:11;;341:27;;-1:-1:-1;;;;;353:14:2;341:11;:27::i;:::-;321:48;;379:5;-1:-1:-1;;;;;379:10:2;;390:4;379:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;405:8:2;:20;;;;;;;;;;;;;;-1:-1:-1;;;;;;405:20:2;-1:-1:-1;;;;;405:20:2;;;;;;;;;;;-1:-1:-1;;;267:165:2:o;438:94::-;484:14;517:8;510:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;510:15:2;;;;;;;;;;;;;;;;;;;;;;;438:94;:::o;117:23::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:23:2;;-1:-1:-1;117:23:2;:::o;1216:577:1:-;1271:14;1297:19;1327:6;1319:15;;1297:37;;1386:4;1380:11;-1:-1:-1;;;1428:5:1;1404:127;1569:11;1562:4;1555:5;1551:16;1544:37;-1:-1:-1;;;1629:4:1;1622:5;1618:16;1594:138;1772:4;1765:5;1762:1;1755:22;1745:32;1353:434;-1:-1:-1;;;;1353:434:1:o"
            },
            "methodIdentifiers": {
              "children(uint256)": "7002ce42",
              "createChild(uint256)": "0419eca5",
              "getChildren()": "4892e8e8"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/Child.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/Child.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/CloneFactory.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/CloneFactory.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/Factory.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/Factory.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/Child.sol": {
        "ast": {
          "absolutePath": "contracts/Child.sol",
          "exportedSymbols": {
            "Child": [
              14
            ]
          },
          "id": 15,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 14,
              "linearizedBaseContracts": [
                14
              ],
              "name": "Child",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "73d4a13a",
                  "id": 3,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14,
                  "src": "47:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "227:29:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 8,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "237:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 9,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "244:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "237:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11,
                        "nodeType": "ExpressionStatement",
                        "src": "237:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "b7b0422d",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "init",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "_data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 13,
                        "src": "203:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:15:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "227:0:0"
                  },
                  "scope": 14,
                  "src": "189:67:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 15,
              "src": "26:232:0"
            }
          ],
          "src": "0:259:0"
        },
        "id": 0
      },
      "contracts/CloneFactory.sol": {
        "ast": {
          "absolutePath": "contracts/CloneFactory.sol",
          "exportedSymbols": {
            "CloneFactory": [
              51
            ]
          },
          "id": 52,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 16,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 51,
              "linearizedBaseContracts": [
                51
              ],
              "name": "CloneFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1287:506:1",
                    "statements": [
                      {
                        "assignments": [
                          24
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24,
                            "mutability": "mutable",
                            "name": "targetBytes",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 31,
                            "src": "1297:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            },
                            "typeName": {
                              "id": 23,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "1297:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 29,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 27,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "1327:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1319:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 25,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "1319:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1319:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1297:37:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1353:434:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1367:24:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1386:4:1",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1380:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1380:11:1"
                              },
                              "variables": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulTypedName",
                                  "src": "1371:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "1428:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1451:66:1",
                                    "type": "",
                                    "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1404:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1404:127:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1404:127:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "1555:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1562:4:1",
                                        "type": "",
                                        "value": "0x14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1551:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1551:16:1"
                                  },
                                  {
                                    "name": "targetBytes",
                                    "nodeType": "YulIdentifier",
                                    "src": "1569:11:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1544:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1544:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1544:37:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "1622:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1629:4:1",
                                        "type": "",
                                        "value": "0x28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1618:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1618:16:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1652:66:1",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1594:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1594:138:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1594:138:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1745:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1762:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "1765:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1772:4:1",
                                    "type": "",
                                    "value": "0x37"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "1755:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1755:22:1"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "1745:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 21,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1745:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 24,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1569:11:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 30,
                        "nodeType": "InlineAssembly",
                        "src": "1344:443:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createClone",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 32,
                        "src": "1237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:16:1"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 32,
                        "src": "1271:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1271:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1270:16:1"
                  },
                  "scope": 51,
                  "src": "1216:577:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1911:706:1",
                    "statements": [
                      {
                        "assignments": [
                          42
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 42,
                            "mutability": "mutable",
                            "name": "targetBytes",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 49,
                            "src": "1921:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            },
                            "typeName": {
                              "id": 41,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "1921:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 47,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1951:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1943:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 43,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "1943:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:15:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1921:37:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1977:634:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1991:24:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2010:4:1",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2004:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2004:11:1"
                              },
                              "variables": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulTypedName",
                                  "src": "1995:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "2052:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2075:66:1",
                                    "type": "",
                                    "value": "0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2028:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2028:127:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2028:127:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "2179:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2186:3:1",
                                        "type": "",
                                        "value": "0xa"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2175:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2175:15:1"
                                  },
                                  {
                                    "name": "targetBytes",
                                    "nodeType": "YulIdentifier",
                                    "src": "2192:11:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2168:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2168:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2168:36:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "2245:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2252:4:1",
                                        "type": "",
                                        "value": "0x1e"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2241:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2241:16:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2275:66:1",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2217:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2217:138:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2217:138:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2369:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "2386:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2393:4:1",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2382:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2382:16:1"
                              },
                              "variables": [
                                {
                                  "name": "other",
                                  "nodeType": "YulTypedName",
                                  "src": "2373:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "query",
                                    "nodeType": "YulIdentifier",
                                    "src": "2423:5:1"
                                  },
                                  {
                                    "name": "other",
                                    "nodeType": "YulIdentifier",
                                    "src": "2430:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2437:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2440:4:1",
                                    "type": "",
                                    "value": "0x2d"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodecopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:11:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2411:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2411:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2458:143:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "clone",
                                            "nodeType": "YulIdentifier",
                                            "src": "2498:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2492:5:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2492:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "other",
                                            "nodeType": "YulIdentifier",
                                            "src": "2512:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2506:5:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2506:12:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2489:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2489:30:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "clone",
                                                "nodeType": "YulIdentifier",
                                                "src": "2550:5:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2557:3:1",
                                                "type": "",
                                                "value": "0xd"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2546:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2546:15:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2540:5:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2540:22:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "other",
                                                "nodeType": "YulIdentifier",
                                                "src": "2574:5:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2581:3:1",
                                                "type": "",
                                                "value": "0xd"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2570:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2570:15:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2564:5:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2564:22:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2537:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2537:50:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2468:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2468:133:1"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2458:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 36,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2423:5:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 39,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2458:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 42,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2192:11:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 48,
                        "nodeType": "InlineAssembly",
                        "src": "1968:643:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 50,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isClone",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 50,
                        "src": "1816:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1816:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "query",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 50,
                        "src": "1832:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1832:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1815:31:1"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "result",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 50,
                        "src": "1894:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1894:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1893:13:1"
                  },
                  "scope": 51,
                  "src": "1799:818:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 52,
              "src": "1188:1431:1"
            }
          ],
          "src": "0:2620:1"
        },
        "id": 1
      },
      "contracts/Factory.sol": {
        "ast": {
          "absolutePath": "contracts/Factory.sol",
          "exportedSymbols": {
            "Factory": [
              108
            ]
          },
          "id": 109,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 53,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:2"
            },
            {
              "absolutePath": "contracts/Child.sol",
              "file": "./Child.sol",
              "id": 54,
              "nodeType": "ImportDirective",
              "scope": 109,
              "sourceUnit": 15,
              "src": "26:21:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/CloneFactory.sol",
              "file": "./CloneFactory.sol",
              "id": 55,
              "nodeType": "ImportDirective",
              "scope": 109,
              "sourceUnit": 52,
              "src": "48:28:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 56,
                    "name": "CloneFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 51,
                    "src": "98:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CloneFactory_$51",
                      "typeString": "contract CloneFactory"
                    }
                  },
                  "id": 57,
                  "nodeType": "InheritanceSpecifier",
                  "src": "98:12:2"
                }
              ],
              "contractDependencies": [
                51
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 108,
              "linearizedBaseContracts": [
                108,
                51
              ],
              "name": "Factory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "7002ce42",
                  "id": 60,
                  "mutability": "mutable",
                  "name": "children",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 108,
                  "src": "117:23:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Child_$14_$dyn_storage",
                    "typeString": "contract Child[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 58,
                      "name": "Child",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 14,
                      "src": "117:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Child_$14",
                        "typeString": "contract Child"
                      }
                    },
                    "id": 59,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "117:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Child_$14_$dyn_storage_ptr",
                      "typeString": "contract Child[]"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "masterContract",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 108,
                  "src": "146:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "146:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 71,
                    "nodeType": "Block",
                    "src": "212:49:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "masterContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "222:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "_masterContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "239:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "222:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 70,
                        "nodeType": "ExpressionStatement",
                        "src": "222:32:2"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 72,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "_masterContract",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 72,
                        "src": "187:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "187:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "186:25:2"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "212:0:2"
                  },
                  "scope": 108,
                  "src": "175:86:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "311:121:2",
                    "statements": [
                      {
                        "assignments": [
                          78
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 78,
                            "mutability": "mutable",
                            "name": "child",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 97,
                            "src": "321:11:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Child_$14",
                              "typeString": "contract Child"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 77,
                              "name": "Child",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 14,
                              "src": "321:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Child_$14",
                                "typeString": "contract Child"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 84,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 81,
                                  "name": "masterContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "353:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 80,
                                "name": "createClone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "341:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                  "typeString": "function (address) returns (address)"
                                }
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "341:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 79,
                            "name": "Child",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "335:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Child_$14_$",
                              "typeString": "type(contract Child)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "335:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Child_$14",
                            "typeString": "contract Child"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "321:48:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 88,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "390:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "child",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "379:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Child_$14",
                                "typeString": "contract Child"
                              }
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "init",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "379:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "379:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 90,
                        "nodeType": "ExpressionStatement",
                        "src": "379:16:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "child",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "419:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Child_$14",
                                "typeString": "contract Child"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Child_$14",
                                "typeString": "contract Child"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 91,
                              "name": "children",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "405:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Child_$14_$dyn_storage",
                                "typeString": "contract Child[] storage ref"
                              }
                            },
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "405:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Child_$14_$returns$__$",
                              "typeString": "function (contract Child)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "405:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "405:20:2"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "0419eca5",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createChild",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 98,
                        "src": "288:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "288:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "287:14:2"
                  },
                  "returnParameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "311:0:2"
                  },
                  "scope": 108,
                  "src": "267:165:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "500:32:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "children",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "517:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Child_$14_$dyn_storage",
                            "typeString": "contract Child[] storage ref"
                          }
                        },
                        "functionReturnParameters": 103,
                        "id": 105,
                        "nodeType": "Return",
                        "src": "510:15:2"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "4892e8e8",
                  "id": 107,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChildren",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "458:2:2"
                  },
                  "returnParameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 107,
                        "src": "484:14:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Child_$14_$dyn_memory_ptr",
                          "typeString": "contract Child[]"
                        },
                        "typeName": {
                          "baseType": {
                            "contractScope": null,
                            "id": 100,
                            "name": "Child",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 14,
                            "src": "484:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Child_$14",
                              "typeString": "contract Child"
                            }
                          },
                          "id": 101,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "484:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Child_$14_$dyn_storage_ptr",
                            "typeString": "contract Child[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "483:16:2"
                  },
                  "scope": 108,
                  "src": "438:94:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 109,
              "src": "78:456:2"
            }
          ],
          "src": "0:535:2"
        },
        "id": 2
      }
    }
  }
}
